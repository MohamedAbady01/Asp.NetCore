@model Authors_MVC.Models.NewsModel

@{
    ViewData["Title"] = "DeleteNews";
}

<h1>DeleteNews</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>NewsModel</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NewsContent)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NewsContent)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Image != null && Model.Image.Length > 0)
            {
                string base64Image = Convert.ToBase64String(Model.Image);
                <img src="data:image;base64,@base64Image" alt="Image" class="img-fluid" />
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PublicationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PublicationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AuthorId)
        </dd>
    </dl>

    <form asp-action="DeleteNews">
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
