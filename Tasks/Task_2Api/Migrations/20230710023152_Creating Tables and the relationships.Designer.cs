// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_2Api.Data;

#nullable disable

namespace Task_2Api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230710023152_Creating Tables and the relationships")]
    partial class CreatingTablesandtherelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Task_2Api.Models.ApprovalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApprovalDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("ApprovalTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("Task_2Api.Models.AttachmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApprovalModelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Images")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalModelId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Task_2Api.Models.DiagonsisModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApprovalModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalModelId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("Task_2Api.Models.ServiceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApprovalModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantiity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalModelId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Task_2Api.Models.AttachmentModel", b =>
                {
                    b.HasOne("Task_2Api.Models.ApprovalModel", "Approval")
                        .WithMany("Attachments")
                        .HasForeignKey("ApprovalModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approval");
                });

            modelBuilder.Entity("Task_2Api.Models.DiagonsisModel", b =>
                {
                    b.HasOne("Task_2Api.Models.ApprovalModel", null)
                        .WithMany("Diagnoses")
                        .HasForeignKey("ApprovalModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task_2Api.Models.ServiceModel", b =>
                {
                    b.HasOne("Task_2Api.Models.ApprovalModel", null)
                        .WithMany("Services")
                        .HasForeignKey("ApprovalModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task_2Api.Models.ApprovalModel", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Diagnoses");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
